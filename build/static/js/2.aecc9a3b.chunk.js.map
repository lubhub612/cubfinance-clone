{"version":3,"sources":["hooks/useContract.ts","utils/callHelpers.ts","hooks/useHarvest.ts","utils/apr.ts","utils/getLiquidityUrlPathParts.ts","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","utils/compoundApyHelpers.ts","components/ApyCalculatorModal/index.tsx","views/Farms/components/FarmCard/ApyButton.tsx","components/Select/Select.tsx","views/Farms/components/SearchInput.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ModalInput/ModalInput.tsx"],"names":["useIfoContract","address","web3","useWeb3","useMemo","getIfoContract","useERC20","getBep20Contract","useCake","getCakeContract","useLottery","getLotteryContract","useMasterchef","getMasterchefContract","useKingdom","getKingdomsContract","useBnbDvividendsContract","getBnbDvividendsContract","useSousChef","id","getSouschefContract","approve","lpContract","masterChefContract","account","a","methods","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","DEFAULT_TOKEN_DECIMAL","toString","on","tx","transactionHash","sousStake","sousChefContract","decimals","BIG_TEN","pow","sousStakeBnb","gas","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmergencyUnstake","harvest","isKingdom","claim","contract","user","nonce","signature","soushHarvest","soushHarvestBnb","BIG_ZERO","useHarvest","farmPid","dispatch","useAppDispatch","useWeb3React","kingdomContract","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farms","harvestPromises","reduce","accum","farm","Promise","all","getPoolApr","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","apr","div","isNaN","isFinite","toNumber","getFarmApr","poolWeight","cakePriceUsd","poolLiquidityUsd","farmType","yearlyCakeRewardAllocation","PCSCAKE_PER_YEAR","BAKE_PER_YEAR","BELT_PER_YEAR","CAKE_PER_BLOCK","liquidity","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","useApprove","onApprove","useIfoApprove","tokenContract","spenderAddress","useStake","onStake","useUnstake","onUnstake","console","info","DepositModal","max","onConfirm","onDismiss","tokenName","addLiquidityUrl","isTokenOnly","isKingdomToken","useState","val","setVal","pendingTx","setPendingTx","TranslateString","useI18n","fullBalance","getFullDisplayBalance","valNumber","fullBalanceNumber","handleChange","e","currentTarget","validity","valid","replace","handleSelectMax","title","onSelectMax","onChange","symbol","inputTitle","variant","onClick","width","disabled","eq","gt","href","style","alignSelf","WithdrawModal","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat","toFixed","getRoi","amountEarned","amountInvested","Grid","styled","GridItem","Description","Text","ApyCalculatorModal","linkLabel","linkHref","earningTokenSymbol","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","color","textTransform","mb","justifyContent","ApyButton","lpLabel","cakePrice","useModal","onPresentApyModal","event","stopPropagation","scale","ml","DropDownHeader","theme","shadows","inset","colors","inputSecondary","input","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","props","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","useRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","height","containerSize","setContainerSize","toggling","onOptionClicked","option","useEffect","current","offsetWidth","offsetHeight","ref","label","map","StyledInput","Input","InputWrapper","Container","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","target","placeholder","onBlur","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","child","i","StyledTokenInput","isWarning","warning","text","xs","StyledErrorMessage","ModalInput","isBalanceZero","position","pl","balance","balanceNumber","Number","toLocaleString","undefined","maximumFractionDigits","displayBalance","alignItems","pattern","inputMode","step","min","mr","external"],"mappings":"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","file":"static/js/2.aecc9a3b.chunk.js","sourcesContent":["import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getKingdomsContract,\n  getBnbDvividendsContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\n}\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useKingdom = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getKingdomsContract(web3), [web3])\n}\n\nexport const useBnbDvividendsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBnbDvividendsContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0x453a75908fb5a36d482d5f8fe88eca836f32ead5') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account, isKingdom) => {\n  if (isKingdom) {\n    return masterChefContract.methods\n      .withdraw(pid, '0')\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const claim = async (contract, account, user, amount, nonce, signature) => {\n  return contract.methods\n    .claim(user, amount, nonce, signature)\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef, useKingdom } from './useContract'\n\nexport const useHarvest = (farmPid: number, isKingdom?: boolean) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const kingdomContract = useKingdom()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(isKingdom ? kingdomContract : masterChefContract, farmPid, account, isKingdom)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract, kingdomContract, isKingdom])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farms: any[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const kingdomContract = useKingdom()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farms.reduce((accum, farm) => {\n      if (farm.isKingdom) return [...accum, harvest(kingdomContract, farm.pid, account, farm.isKingdom)]\n      return [...accum, harvest(masterChefContract, farm.pid, account, farm.isKingdom)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farms, masterChefContract, kingdomContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account, false)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, PCSCAKE_PER_YEAR, BAKE_PER_YEAR, BELT_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  isKingdom?: boolean,\n  farmType?: string\n): number => {\n  if (isKingdom) {\n    let yearlyCakeRewardAllocation = PCSCAKE_PER_YEAR.times(poolWeight)\n    if (farmType === 'Bakery') yearlyCakeRewardAllocation = BAKE_PER_YEAR.times(poolWeight)\n    else if (farmType === 'Belt') yearlyCakeRewardAllocation = BELT_PER_YEAR.times(poolWeight)\n\n    const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n    return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n  }\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  const liquidity = poolLiquidityUsd.toNumber() ? poolLiquidityUsd : new BigNumber(0)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(liquidity).times(100)\n\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery, useKingdom } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract, isKingdom?: boolean) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const kingdomContract = useKingdom()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, isKingdom ? kingdomContract : masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract, kingdomContract, isKingdom])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef, useKingdom } from './useContract'\n\nconst useStake = (pid: number, isKingdom?: boolean) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const kingdomContract = useKingdom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stake(isKingdom ? kingdomContract : masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n    },\n    [account, dispatch, masterChefContract, pid, kingdomContract, isKingdom],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef, useKingdom } from './useContract'\n\nconst useUnstake = (pid: number, isKingdom?: boolean) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const kingdomContract = useKingdom()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(isKingdom ? kingdomContract : masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid, kingdomContract, isKingdom],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23, 78]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n  isTokenOnly?: boolean\n  isKingdomToken?: boolean\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl, isTokenOnly, isKingdomToken }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1068, isTokenOnly || isKingdomToken ? 'Stake tokens' : 'Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={TranslateString(1070, 'Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {TranslateString(999, 'Get')} {tokenName}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  isTokenOnly?: boolean\n  isKingdomToken?: boolean\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', isTokenOnly, isKingdomToken }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1126, isTokenOnly || isKingdomToken ? 'Unstake tokens' : 'Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={TranslateString(588, 'Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = farmApr / 100\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CUB',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n}) => {\n  const TranslateString = useI18n()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n  })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(860, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(858, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {earningTokenSymbol} {TranslateString(999, 'per')} $1000\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          999,\n          `Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.`,\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apr?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, addLiquidityUrl }) => {\n  const TranslateString = useI18n()\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={`${TranslateString(999, 'Get')} ${lpLabel}`}\n      tokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap-libs/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder=\"Search\"\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n}) => {\n  const TranslateString = useI18n()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceNumber = Number(balance)\n    if (balanceNumber > 0 && balanceNumber < 0.0001) {\n      return balanceNumber.toLocaleString(undefined, { maximumFractionDigits: 20 })\n    }\n    return balanceNumber.toLocaleString()\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {TranslateString(1120, 'Balance')}: {displayBalance(max)}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          No tokens to stake:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {TranslateString(999, 'get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n"],"sourceRoot":""}