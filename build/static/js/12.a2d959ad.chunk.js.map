{"version":3,"sources":["views/NotFound.tsx","hooks/useI18n.ts"],"names":["StyledNotFound","styled","div","NotFound","TranslateString","useI18n","width","mb","size","as","href","scale","translations","useContext","TranslationsContext","translationId","fallback","data","length","foundTranslation","find","translation","stringId","text","includesVariable","includes","interpolatedText","isEmpty","Object","keys","forEach","dataKey","templateKey","RegExp","replace"],"mappings":"mMAMMA,EAAiBC,IAAOC,IAAV,4JAyBLC,UAjBE,WACf,IAAMC,EAAkBC,cAExB,OACE,cAAC,IAAD,UACE,eAACL,EAAD,WACE,cAAC,IAAD,CAAUM,MAAM,OAAOC,GAAG,QAC1B,cAAC,IAAD,CAASC,KAAK,MAAd,iBACA,cAAC,IAAD,CAAMD,GAAG,OAAT,SAAiBH,EAAgB,KAAM,2BACvC,cAAC,IAAD,CAAQK,GAAG,IAAIC,KAAK,IAAIC,MAAM,KAA9B,SACGP,EAAgB,KAAM,sB,iCCxBjC,4BA+CeC,IAvCC,WACd,IAAQO,EAAiBC,qBAAWC,KAA5BF,aAER,OAAO,SAACG,EAAuBC,GAA8C,IAA5BC,EAA2B,uDAAP,GACnE,GAA4B,IAAxBL,EAAaM,OACf,OAAOF,EAGT,IAAMG,EAAmBP,EAAaQ,MAAK,SAACC,GAC1C,OAAOA,EAAYJ,KAAKK,WAAaP,KAGvC,GAAII,EAAkB,CACpB,IAAQI,EAASJ,EAAiBF,KAA1BM,KACFC,EAAmBD,EAAKE,SAAS,KAEvC,GAAID,EAAkB,CACpB,IAAIE,EAAmBH,EAGvB,OAAII,kBAAQV,GACHD,GAGTY,OAAOC,KAAKZ,GAAMa,SAAQ,SAACC,GACzB,IAAMC,EAAc,IAAIC,OAAJ,WAAeF,EAAf,KAA2B,KAC/CL,EAAmBA,EAAiBQ,QAAQF,EAAaf,EAAKc,OAGzDL,GAGT,OAAOH,EAGT,OAAOP","file":"static/js/12.a2d959ad.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Text, LogoIcon } from '@pancakeswap-libs/uikit'\nimport Page from 'components/layout/Page'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 64px);\n  justify-content: center;\n`\n\nconst NotFound = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Heading size=\"xxl\">404</Heading>\n        <Text mb=\"16px\">{TranslateString(1122, 'Oops, page not found.')}</Text>\n        <Button as=\"a\" href=\"/\" scale=\"sm\">\n          {TranslateString(1124, 'Back Home')}\n        </Button>\n      </StyledNotFound>\n    </Page>\n  )\n}\n\nexport default NotFound\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n"],"sourceRoot":""}